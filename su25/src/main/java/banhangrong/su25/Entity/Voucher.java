package banhangrong.su25.Entity;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.math.BigDecimal;
import java.time.LocalDateTime;

@Entity
@Table(name = "vouchers")
public class Voucher {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long voucherId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_id", nullable = false)
    @JsonIgnore
    private Users seller;

    @Column(nullable = false, length = 50)
    private String code;

    @Column(nullable = false, length = 255)
    private String name;

    @Column(columnDefinition = "TEXT")
    private String description;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false, length = 20)
    private DiscountType discountType;

    @Column(nullable = false, precision = 15, scale = 2)
    private BigDecimal discountValue;

    @Column(nullable = false)
    private Integer maxUsage = 1;

    @Column(nullable = false)
    private Integer usedCount = 0;

    @Column(precision = 15, scale = 2)
    private BigDecimal minOrderValue = BigDecimal.ZERO;

    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Column(nullable = false)
    private LocalDateTime validFrom;

    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @Column(nullable = false)
    private LocalDateTime validTo;

    @Column(nullable = false)
    private Boolean isActive = true;

    // Các trường cho Voucher Thông Minh
    @Column(nullable = false)
    private Boolean isAutoGenerated = false;

    @Enumerated(EnumType.STRING)
    @Column(length = 20)
    private AutoGenerationType autoGenerationType = AutoGenerationType.MANUAL;

    @Column(columnDefinition = "JSON")
    private String autoGenerationRule;

    @CreationTimestamp
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime updatedAt;

    // Enums
    public enum DiscountType {
        PERCENTAGE, FIXED
    }

    public enum AutoGenerationType {
        ABANDONED_CART, LOYAL_CUSTOMER, MANUAL
    }

    // Constructors
    public Voucher() {}

    public Voucher(Users seller, String code, String name, DiscountType discountType,
                   BigDecimal discountValue, LocalDateTime validFrom, LocalDateTime validTo) {
        this.seller = seller;
        this.code = code;
        this.name = name;
        this.discountType = discountType;
        this.discountValue = discountValue;
        this.validFrom = validFrom;
        this.validTo = validTo;
    }

    // Business Logic Methods
    public boolean isValid() {
        LocalDateTime now = LocalDateTime.now();
        return isActive &&
                now.isAfter(validFrom) &&
                now.isBefore(validTo) &&
                usedCount < maxUsage;
    }

    public boolean canApplyToOrder(BigDecimal orderAmount) {
        return isValid() && orderAmount.compareTo(minOrderValue) >= 0;
    }

    public BigDecimal calculateDiscount(BigDecimal orderAmount) {
        if (!canApplyToOrder(orderAmount)) {
            return BigDecimal.ZERO;
        }

        if (discountType == DiscountType.PERCENTAGE) {
            return orderAmount.multiply(discountValue).divide(BigDecimal.valueOf(100));
        } else {
            return discountValue.min(orderAmount);
        }
    }

    // Getters and Setters
    public Long getVoucherId() { return voucherId; }
    public void setVoucherId(Long voucherId) { this.voucherId = voucherId; }

    public Users getSeller() { return seller; }
    public void setSeller(Users seller) { this.seller = seller; }

    public String getCode() { return code; }
    public void setCode(String code) { this.code = code; }

    public String getName() { return name; }
    public void setName(String name) { this.name = name; }

    public String getDescription() { return description; }
    public void setDescription(String description) { this.description = description; }

    public DiscountType getDiscountType() { return discountType; }
    public void setDiscountType(DiscountType discountType) { this.discountType = discountType; }

    public BigDecimal getDiscountValue() { return discountValue; }
    public void setDiscountValue(BigDecimal discountValue) { this.discountValue = discountValue; }

    public Integer getMaxUsage() { return maxUsage; }
    public void setMaxUsage(Integer maxUsage) { this.maxUsage = maxUsage; }

    public Integer getUsedCount() { return usedCount; }
    public void setUsedCount(Integer usedCount) { this.usedCount = usedCount; }

    public BigDecimal getMinOrderValue() { return minOrderValue; }
    public void setMinOrderValue(BigDecimal minOrderValue) { this.minOrderValue = minOrderValue; }

    public LocalDateTime getValidFrom() { return validFrom; }
    public void setValidFrom(LocalDateTime validFrom) { this.validFrom = validFrom; }

    public LocalDateTime getValidTo() { return validTo; }
    public void setValidTo(LocalDateTime validTo) { this.validTo = validTo; }

    public Boolean getIsActive() { return isActive; }
    public void setIsActive(Boolean isActive) { this.isActive = isActive; }

    public Boolean getIsAutoGenerated() { return isAutoGenerated; }
    public void setIsAutoGenerated(Boolean isAutoGenerated) { this.isAutoGenerated = isAutoGenerated; }

    public AutoGenerationType getAutoGenerationType() { return autoGenerationType; }
    public void setAutoGenerationType(AutoGenerationType autoGenerationType) { this.autoGenerationType = autoGenerationType; }

    public String getAutoGenerationRule() { return autoGenerationRule; }
    public void setAutoGenerationRule(String autoGenerationRule) { this.autoGenerationRule = autoGenerationRule; }

    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }

    public LocalDateTime getUpdatedAt() { return updatedAt; }
    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }
}
